Java Service Wrapper Revision History.
--------------------------------------
2.2.7
* Fix a problem where the log output was not being directed to a file called
  wrapper.log in the same directory as the Wrapper binary in the event that the
  configured wrapper log file could not be accessed.
* Fix a problem where the Wrapper was not shutting down the JVM correctly when
  all non-daemon threads completed.   Normally a JVM will exit when all of its
  non-daemon threads have completed so this was causing some problems.
  (Thanks to Jung Tamas)
* Added the ability to set the priority of the Wrapper and its JVM when run
  as an NT service or console application.  The same thing can be better
  achieved on Unix systems by using "nice" in the shell script used to launch
  the Wrapper.  See the documentation for for details.
* JVM information was not being displayed correctly when the Wrapper vative
  library could not be loaded.
* Added a new property to cause the wrapper to attempt to request a thread dump
  when the JVM does not exit on request.
* Improved the documentation of the WrapperSimpleApp and WrapperListener
  classes.
* Adding a new property wrapper.shutdown.timeout to allow the user to extend
  the length of time that an application is allowed to take shutting down.
* Rework the way the shutdown process works so that System.exit will never be
  called before the stop method in WrapperListener has had a chance to complete.
* Add a Restart button to the TestWrapper application.
* Fix a problem on Unix versions where '%' characters in Java output would
  sometimes cause the wrapper to crash.  Somehow missed getting this into the
  last release.

2.2.6
* Fix a problem where '%' characters in Java output would sometimes cause the
  wrapper to crash.  (Thanks to Frode Moe)
* Added support for requesting a Java thread dump without shutting down the
  Java process.
* Fixed a problem on windows where the java command was looking in the windows
  system and system32 directories for the java executable before checking the
  path when the full path to the java executable was not specified in the
  configuration file.  This could lead to different JVM being run from the
  Wrapper than was run if java -version was run from the command line.  The
  Wrapper will now attempt to resolve the full java path using the PATH
  environment variable.
* Added debug output showing Java version information when the JVM first
  starts.
* Modified c source to use /* */ style comments rather than // style comments.
  Some people were having problems with some compilers.

2.2.5
* Added support for service descriptions for Win2k and XP.
* Fixed bug issue when reading config files from Windows on Unix.
* Deprecated the wrapper.debug property in favor of loglevels.
* Added new logger functionality includes the following features:
  Loglevels like Log4j, NT Eventlog support, UNIX syslog support and rolling
  log files.
* Added wildcard support for classpath entries in wrapper.conf.
* Added the ability to specify configuration properties from the command line.
* Changed the way NT services are installed so that a patched version of the
  Wrapper.exe file no longer needs to be created to reference the
  wrapper.conf file.

2.2.4
* The value of APP_NAME in the bash or sh scripts no longer needs to be the
  same as the script.
* Added the ablility to format and/or disable file logging and output to the
  console.
* Set mode of executables in binary release tar files so that they can be run
  without modification after being extracted.
* Fixed line feeds in release so that bat files are always CRLF, unix scripts
  are always LF.  Other source files are always CRLF in ZIP archives and LF
  in tar.gz archives.
* Make the build fail if Wrapper.exe or Wrapper.dll do not exist for Windows
  builds.
* Added an empty wrapper.log to the releases so that the TestWrapper example
  program runs out of the box.

2.2.3
* Added template scripts and conf files for ease of integration with other
  applications.
* Cleaned up the build.
* The WrapperSimpleApp method of launchine applications was not working 
  correctly with applications whose main method did not return.
* Add sample scripts and wrapper.conf files in the bin and lib directories.
  These scripts are used to start a sample application which runs out of the
  box.  See the new example.html page in the documentation for more details.
* Get rid of the platform specific directories in the bin and lib directories.
* Enable relative paths for Windows version.  In previous versions of Wrapper,
  it was necessary to always use absolute paths because the working directory 
  of the wrapper would be then NT System32 directory when run as a service.
* On the windows version, the wrapper always sets the current working
  directory to the location of the wrapper executable immediately after
  startup.
* Improvements to the documentation / web page.

2.2.2
* Added HTML based documentation.

2.2.1
* Added Linux and Solaris build files.
* Added Linux and Solaris documentation.

2.2.0
* Initial Public Release.

