<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE project PUBLIC "-//ANT//DTD project//EN" "../project.dtd">

<!-- ======================================================================= -->
<!-- Wrapper build file                                                     -->
<!-- ======================================================================= -->

<project name="wrapper-tests" default="test-setup" basedir=".">
    
    <!-- Local build properties -->
    <property file="${user.home}/.ant.local.properties" />
    
    <!-- platform -->
    <property name="is.${os.name}" value="true"/>
    
    <property name="test.dir"      value="${basedir}"/>
    <property name="src.dir"       value="../src"/>
    
    <!-- =================================================================== -->
    <!-- Help on usage                                                       -->
    <!-- =================================================================== -->
    <target name="usage">
        <echo message="Use the -projecthelp option instead"/>
    </target>
    <target name="help" depends="usage"/>
    
    <!-- =================================================================== -->
    <!-- Resolve Platform properties                                         -->
    <!-- =================================================================== -->
    <target name="init-windows-nt" if="is.Windows NT">
        <property name="is.Windows" value="true"/>
    </target>
    <target name="init-windows-2000" if="is.Windows 2000">
        <property name="is.Windows" value="true"/>
    </target>
    <target name="init-linux" if="is.Linux">
        <property name="is.Unix" value="true"/>
    </target>
    <target name="init-solaris" if="is.SunOS">
        <property name="is.Unix" value="true"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Initialize build.                                                   -->
    <!-- =================================================================== -->
    <target name="init" depends="init-windows-nt, init-windows-2000, init-linux, init-solaris">
    </target>
    
    <!-- =================================================================== -->
    <!-- Test Setup target (Common)                                          -->
    <!-- =================================================================== -->
    <target name="test-setup-common" depends="init">
        <!-- Create the test specific wrapper.conf files -->
        
        <!-- Background Threads Test -->
        <filter token="app.name"          value="backgroundthreads"/>
        <filter token="app.long.name"     value="Background Threads Case" />
        <copy file="${src.dir}/conf/wrapper.conf.in"
              tofile="${test.dir}/backgroundthreads.conf"
              filtering="on"/>
        <replace file="${test.dir}/backgroundthreads.conf"
                 token="wrapper.java.mainclass=com.silveregg.wrapper.test.Main"
                 value="wrapper.java.mainclass=com.silveregg.wrapper.WrapperSimpleApp" />
        <replace file="${test.dir}/backgroundthreads.conf"
                 token="#wrapper.app.parameter.1="
                 value="wrapper.app.parameter.1=com.silveregg.wrapper.test.BackgroundThreads" />
        <replace file="${test.dir}/backgroundthreads.conf"
                 token="wrapper.logfile=../logs/wrapper.log"
                 value="wrapper.logfile=../test/testwrapper.log" />
        <replace file="${test.dir}/backgroundthreads.conf"
                 token="wrapper.pidfile=/var/run/aigent.pid"
                 value="wrapper.pidfile=${basedir}/backgroundthreads.pid" />
        
        <!-- Long Running Background Threads Test -->
        <filter token="app.name"          value="longrunningbackgroundthreads"/>
        <filter token="app.long.name"     value="Long Running Background Threads Case" />
        <copy file="${src.dir}/conf/wrapper.conf.in"
              tofile="${test.dir}/longrunningbackgroundthreads.conf"
              filtering="on"/>
        <replace file="${test.dir}/longrunningbackgroundthreads.conf"
                 token="wrapper.java.mainclass=com.silveregg.wrapper.test.Main"
                 value="wrapper.java.mainclass=com.silveregg.wrapper.WrapperSimpleApp" />
        <replace file="${test.dir}/longrunningbackgroundthreads.conf"
                 token="#wrapper.app.parameter.1="
                 value="wrapper.app.parameter.1=com.silveregg.wrapper.test.LongRunningBackgroundThreads" />
        <replace file="${test.dir}/longrunningbackgroundthreads.conf"
                 token="wrapper.logfile=../logs/wrapper.log"
                 value="wrapper.logfile=../test/testwrapper.log" />
        <replace file="${test.dir}/longrunningbackgroundthreads.conf"
                 token="wrapper.pidfile=/var/run/aigent.pid"
                 value="wrapper.pidfile=${basedir}/longrunningbackgroundthreads.pid" />
        
        <!-- Daemon Threads Test -->
        <filter token="app.name"          value="daemonthreads"/>
        <filter token="app.long.name"     value="Daemon Threads Case" />
        <copy file="${src.dir}/conf/wrapper.conf.in"
              tofile="${test.dir}/daemonthreads.conf"
              filtering="on"/>
        <replace file="${test.dir}/daemonthreads.conf"
                 token="wrapper.java.mainclass=com.silveregg.wrapper.test.Main"
                 value="wrapper.java.mainclass=com.silveregg.wrapper.WrapperSimpleApp" />
        <replace file="${test.dir}/daemonthreads.conf"
                 token="#wrapper.app.parameter.1="
                 value="wrapper.app.parameter.1=com.silveregg.wrapper.test.DaemonThreads" />
        <replace file="${test.dir}/daemonthreads.conf"
                 token="wrapper.logfile=../logs/wrapper.log"
                 value="wrapper.logfile=../test/testwrapper.log" />
        <replace file="${test.dir}/daemonthreads.conf"
                 token="wrapper.pidfile=/var/run/aigent.pid"
                 value="wrapper.pidfile=${basedir}/daemonthreads.pid" />
        
        <!-- No Return Test -->
        <filter token="app.name"          value="noreturn"/>
        <filter token="app.long.name"     value="No Return Case" />
        <copy file="${src.dir}/conf/wrapper.conf.in"
              tofile="${test.dir}/noreturn.conf"
              filtering="on"/>
        <replace file="${test.dir}/noreturn.conf"
                 token="wrapper.java.mainclass=com.silveregg.wrapper.test.Main"
                 value="wrapper.java.mainclass=com.silveregg.wrapper.WrapperSimpleApp" />
        <replace file="${test.dir}/noreturn.conf"
                 token="#wrapper.app.parameter.1="
                 value="wrapper.app.parameter.1=com.silveregg.wrapper.test.NoReturn" />
        <replace file="${test.dir}/noreturn.conf"
                 token="wrapper.logfile=../logs/wrapper.log"
                 value="wrapper.logfile=../test/testwrapper.log" />
        <replace file="${test.dir}/noreturn.conf"
                 token="wrapper.pidfile=/var/run/aigent.pid"
                 value="wrapper.pidfile=${basedir}/noreturn.pid" />

        <!-- Quick Complete Test -->
        <filter token="app.name"          value="quickcomplete"/>
        <filter token="app.long.name"     value="Quick Complete Case" />
        <copy file="${src.dir}/conf/wrapper.conf.in"
              tofile="${test.dir}/quickcomplete.conf"
              filtering="on"/>
        <replace file="${test.dir}/quickcomplete.conf"
                 token="wrapper.java.mainclass=com.silveregg.wrapper.test.Main"
                 value="wrapper.java.mainclass=com.silveregg.wrapper.WrapperSimpleApp" />
        <replace file="${test.dir}/quickcomplete.conf"
                 token="#wrapper.app.parameter.1="
                 value="wrapper.app.parameter.1=com.silveregg.wrapper.test.QuickComplete" />
        <replace file="${test.dir}/quickcomplete.conf"
                 token="wrapper.logfile=../logs/wrapper.log"
                 value="wrapper.logfile=../test/testwrapper.log" />
        <replace file="${test.dir}/quickcomplete.conf"
                 token="wrapper.pidfile=/var/run/aigent.pid"
                 value="wrapper.pidfile=${basedir}/quickcomplete.pid" />

        <!-- Environment Variables Test -->
        <filter token="app.name"          value="envvars"/>
        <filter token="app.long.name"     value="Environment Variables Case" />
        <copy file="${src.dir}/conf/wrapper.conf.in"
              tofile="${test.dir}/envvars.conf"
              filtering="on"/>
        <replace file="${test.dir}/envvars.conf"
                 token="wrapper.java.mainclass=com.silveregg.wrapper.test.Main"
                 value="wrapper.java.mainclass=com.silveregg.wrapper.WrapperSimpleApp" />
        <replace file="${test.dir}/envvars.conf"
                 token="#wrapper.app.parameter.1="
                 value="wrapper.app.parameter.1=com.silveregg.wrapper.test.EnvironmentVariables" />
        <replace file="${test.dir}/envvars.conf"
                 token="wrapper.logfile=../logs/wrapper.log"
                 value="wrapper.logfile=../test/testwrapper.log" />
        <replace file="${test.dir}/envvars.conf"
                 token="wrapper.pidfile=/var/run/aigent.pid"
                 value="wrapper.pidfile=${basedir}/envvars.pid" />
        
        <!-- Percent Output Crash Test -->
        <filter token="app.name"          value="percentoutput"/>
        <filter token="app.long.name"     value="Percent Output Case" />
        <copy file="${src.dir}/conf/wrapper.conf.in"
              tofile="${test.dir}/percentoutput.conf"
              filtering="on"/>
        <replace file="${test.dir}/percentoutput.conf"
                 token="wrapper.java.mainclass=com.silveregg.wrapper.test.Main"
                 value="wrapper.java.mainclass=com.silveregg.wrapper.WrapperSimpleApp" />
        <replace file="${test.dir}/percentoutput.conf"
                 token="#wrapper.app.parameter.1="
                 value="wrapper.app.parameter.1=com.silveregg.wrapper.test.PercentOutput" />
        <replace file="${test.dir}/percentoutput.conf"
                 token="wrapper.logfile=../logs/wrapper.log"
                 value="wrapper.logfile=../test/testwrapper.log" />
        <replace file="${test.dir}/percentoutput.conf"
                 token="wrapper.pidfile=/var/run/aigent.pid"
                 value="wrapper.pidfile=${basedir}/percentoutput.pid" />
    </target>
    
    <!-- =================================================================== -->
    <!-- Test Setup target (Windows)                                         -->
    <!-- =================================================================== -->
    <target name="test-setup-windows" depends="test-setup-common" if="is.Windows">
        <!-- Create the test specific batch files -->
        
        <!-- Background Threads Test -->
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestBackgroundThreads.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestBackgroundThreads.bat"
                 token='set _APP_HOME=%_APP_HOME:\bin\=%'
                 value='set _APP_HOME=%_APP_HOME:\test\=%' />
        <replace file="${test.dir}/TestBackgroundThreads.bat"
                 token='set _WRAPPER_CONF="%_APP_HOME%\conf\wrapper.conf"'
                 value='set _WRAPPER_CONF="%_APP_HOME%\test\backgroundthreads.conf"' />
        
        <!-- Long Running Background Threads Test -->
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestLongRunningBackgroundThreads.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestLongRunningBackgroundThreads.bat"
                 token='set _APP_HOME=%_APP_HOME:\bin\=%'
                 value='set _APP_HOME=%_APP_HOME:\test\=%' />
        <replace file="${test.dir}/TestLongRunningBackgroundThreads.bat"
                 token='set _WRAPPER_CONF="%_APP_HOME%\conf\wrapper.conf"'
                 value='set _WRAPPER_CONF="%_APP_HOME%\test\longrunningbackgroundthreads.conf"' />
        
        <!-- Daemon Threads Test -->
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestDaemonThreads.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestDaemonThreads.bat"
                 token='set _APP_HOME=%_APP_HOME:\bin\=%'
                 value='set _APP_HOME=%_APP_HOME:\test\=%' />
        <replace file="${test.dir}/TestDaemonThreads.bat"
                 token='set _WRAPPER_CONF="%_APP_HOME%\conf\wrapper.conf"'
                 value='set _WRAPPER_CONF="%_APP_HOME%\test\daemonthreads.conf"' />
        
        <!-- No Return Test -->
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestNoReturn.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestNoReturn.bat"
                 token='set _APP_HOME=%_APP_HOME:\bin\=%'
                 value='set _APP_HOME=%_APP_HOME:\test\=%' />
        <replace file="${test.dir}/TestNoReturn.bat"
                 token='set _WRAPPER_CONF="%_APP_HOME%\conf\wrapper.conf"'
                 value='set _WRAPPER_CONF="%_APP_HOME%\test\noreturn.conf"' />
        
        <!-- Quick Complete Test -->
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestQuickComplete.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestQuickComplete.bat"
                 token='set _APP_HOME=%_APP_HOME:\bin\=%'
                 value='set _APP_HOME=%_APP_HOME:\test\=%' />
        <replace file="${test.dir}/TestQuickComplete.bat"
                 token='set _WRAPPER_CONF="%_APP_HOME%\conf\wrapper.conf"'
                 value='set _WRAPPER_CONF="%_APP_HOME%\test\quickcomplete.conf"' />

        <!-- Environment Variables Test -->
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestEnvironmentVariables.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestEnvironmentVariables.bat"
                 token='set _APP_HOME=%_APP_HOME:\bin\=%'
                 value='set _APP_HOME=%_APP_HOME:\test\=%' />
        <replace file="${test.dir}/TestEnvironmentVariables.bat"
                 token='set _WRAPPER_CONF="%_APP_HOME%\conf\wrapper.conf"'
                 value='set _WRAPPER_CONF="%_APP_HOME%\test\envvars.conf"' />
        <replace file="${test.dir}/TestEnvironmentVariables.bat">
            <replacetoken>@echo off</replacetoken>
            <replacevalue><![CDATA[@echo off

rem
rem Set up some test environment variables
rem
set ENV_VAR_1=a
set ENV_VAR_2=b
set ENV_VAR_3=c
set ENV_VAR_4=d]]></replacevalue>
        </replace>
        
        <!-- Percent Output Test -->
        <copy file="${src.dir}/bin/App.bat.in"
              tofile="${test.dir}/TestPercentOutput.bat"
              filtering="on"/>
        <replace file="${test.dir}/TestPercentOutput.bat"
                 token='set _APP_HOME=%_APP_HOME:\bin\=%'
                 value='set _APP_HOME=%_APP_HOME:\test\=%' />
        <replace file="${test.dir}/TestPercentOutput.bat"
                 token='set _WRAPPER_CONF="%_APP_HOME%\conf\wrapper.conf"'
                 value='set _WRAPPER_CONF="%_APP_HOME%\test\percentoutput.conf"' />
    </target>
    
    <!-- =================================================================== -->
    <!-- Test Setup target (Linux)                                           -->
    <!-- =================================================================== -->
    <target name="test-setup-linux" depends="test-setup-common" if="is.Linux">
        <!-- Create a template script to make this easier -->
        <copy file="${src.dir}/bin/bash.script.in"
              tofile="${test.dir}/temp.script.in"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Test Setup target (Solaris)                                         -->
    <!-- =================================================================== -->
    <target name="test-setup-solaris" depends="test-setup-common" if="is.SunOS">
        <!-- Create a template script to make this easier -->
        <copy file="${src.dir}/bin/sh.script.in"
              tofile="${test.dir}/temp.script.in"/>
        <replace file="${test.dir}/temp.script.in"
                 token='PIDDIR="/var/run"'
                 value='PIDDIR="${basedir}"' />
    </target>
    
    <!-- =================================================================== -->
    <!-- Test Setup target (Unix)                                            -->
    <!-- =================================================================== -->
    <target name="test-setup-unix" depends="test-setup-linux, test-setup-solaris" if="is.Unix">
        <!-- Create the test specific script files -->
        <replace file="${test.dir}/temp.script.in"
                 token='WRAPPER_CMD="./wrapper"'
                 value='WRAPPER_CMD="../bin/wrapper"' />
        <replace file="${test.dir}/temp.script.in"
                 token='WRAPPER_CONF="../conf/wrapper.conf"'
                 value='WRAPPER_CONF="../test/@app.name@.conf"' />
        <replace file="${test.dir}/temp.script.in"
                 token="SCRIPT=`$$SCRIPT_DIR/realpath $$0`"
                 value="SCRIPT=`$$SCRIPT_DIR/../bin/realpath $$0`" />
        
        <!-- Background Threads Test -->
        <filter token="app.name"          value="backgroundthreads"/>
        <filter token="app.long.name"     value="Background Threads Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/backgroundthreads"
              filtering="on"/>
        <chmod file="${test.dir}/backgroundthreads" perm="+x"/> 
        
        <!-- Long Running Background Threads Test -->
        <filter token="app.name"          value="longrunningbackgroundthreads"/>
        <filter token="app.long.name"     value="Long Running Background Threads Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/longrunningbackgroundthreads"
              filtering="on"/>
        <chmod file="${test.dir}/longrunningbackgroundthreads" perm="+x"/> 
        
        <!-- Daemon Threads Test -->
        <filter token="app.name"          value="daemonthreads"/>
        <filter token="app.long.name"     value="Daemon Threads Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/daemonthreads"
              filtering="on"/>
        <chmod file="${test.dir}/daemonthreads" perm="+x"/> 
        
        <!-- No Return Test -->
        <filter token="app.name"          value="noreturn"/>
        <filter token="app.long.name"     value="No Return Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/noreturn"
              filtering="on"/>
        <chmod file="${test.dir}/noreturn" perm="+x"/> 
        
        <!-- Quick Complete Test -->
        <filter token="app.name"          value="quickcomplete"/>
        <filter token="app.long.name"     value="Quick Complete Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/quickcomplete"
              filtering="on"/>
        <chmod file="${test.dir}/quickcomplete" perm="+x"/> 
        
        <!-- Environment Variables Test -->
        <filter token="app.name"          value="envvars"/>
        <filter token="app.long.name"     value="Environment Variables Case" />
        <delete file="${test.dir}/envvars"/>
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/envvars"
              filtering="on"/>
        <replace file="${test.dir}/envvars">
            <replacetoken>the needs of your application</replacetoken>
            <replacevalue><![CDATA[the needs of your application

# Set up some test environment variables
export ENV_VAR_1=a
export ENV_VAR_2=b
export ENV_VAR_3=c
export ENV_VAR_4=d]]></replacevalue>
        </replace>
        <chmod file="${test.dir}/envvars" perm="+x"/> 
        
        <!-- Percent Output Test -->
        <filter token="app.name"          value="percentoutput"/>
        <filter token="app.long.name"     value="Percent Output Case" />
        <copy file="${test.dir}/temp.script.in"
              tofile="${test.dir}/percentoutput"
              filtering="on"/>
        <chmod file="${test.dir}/percentoutput" perm="+x"/> 
        
        <!-- Get rid of the temp script file -->
        <delete file="${test.dir}/temp.script.in"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Test Setup target                                                   -->
    <!-- =================================================================== -->
    <target name="test-setup" 
            depends="test-setup-windows, test-setup-unix">
    </target>

    <!-- =================================================================== -->
    <!-- Clean up everything.                                                -->
    <!-- =================================================================== -->
    <target name="total-clean">
        <delete>
            <fileset dir="${basedir}">
                <exclude name="build-tests.xml"/>
            </fileset>
        </delete>
    </target>

</project>

