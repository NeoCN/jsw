<?xml version="1.0"?>

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "../dtd/docbook/4.1.2/docbookx.dtd">

<!-- ********************************************************************
     $Id$
     ******************************************************************** -->

<chapter id="jmx">
    <title>JMX Control</title> 
    <section>
        <title>Controlling the Java Service Wrapper using JMX</title>
        <para>
            The Java Service Wrapper provides a pair of JMX MBean interfaces
            which make it possible to control the Wrapper using a JMX interface.
            This section will describe how to configure your JMX enabled
            application so that the MBeans provided with the Java Service
            Wrapper are available.
        </para>
        <itemizedlist>
            <listitem>
                <ulink url="#jboss">JBoss</ulink>
            </listitem>
            <listitem>
                <ulink url="#sun">Sun JMX Reference Implementation</ulink>
            </listitem>
        </itemizedlist>
        <section id="jboss">
            <title>JBoss</title>
            <para>
                Registering the Java Service Wrapper's MBean interfaces with JBoss is
                surprising simple.  This assumes that you have already gotten JBoss
                integrated with the Java Service Wrapper.  See the
                <ulink url="integrate.html">Integration</ulink> section, in particular
                the example using JBoss.
            </para>
            <para>
                JBoss allows you to register as an MBean, any Object which implements
                an interface whose name is the same as the class, appended by "MBean".
                The Wrapper provides two such classes in the
                <literal moreinfo="none">org.tanukisoftware.wrapper.jmx</literal> package.
                <literal moreinfo="none">WrapperManager</literal> and
                <literal moreinfo="none">WrapperManagerTesting</literal>.  The first
                provides several functions to restart and stop the JVM as well as
                providing other information about the Java Service Wrapper.  The
                second class exposes a few methods which can be useful in the testing
                cycle.  They are broken out in case you wish to not include them in
                a final product release.  See the <ulink url="javadocs.hmtl">javadocs</ulink>
                for more details.
            </para>
            <para>
                To register both of the above MBeans, create an XML file named
                <literal moreinfo="none">java-service-wrapper-service.xml</literal> in
                the <literal moreinfo="none">${jboss.home}/server/default</literal>
                directory.  The file should contain the following:
            </para>
            <informalexample>
                <screen format="linespecific"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE server>
<server>
    <classpath archives="wrapper.jar" codebase="../../lib"/>
    
    <mbean code="org.tanukisoftware.wrapper.jmx.WrapperManager"
           name="JavaServiceWrapper:service=WrapperManager"/>
    
    <mbean code="org.tanukisoftware.wrapper.jmx.WrapperManagerTesting"
           name="JavaServiceWrapper:service=WrapperManagerTesting"/>
</server>]]></screen>
            </informalexample>
            <para>
                Upon saving the file, JBoss should detect it and register your new
                MBeans almost immediately.  No need to restart JBoss.  Pretty Cool.
            </para>
            <para>
                Now, to actually use the new MBeans, simply point your browser to
                JBoss's JMX interface at:
                <ulink url="http://localhost:8080">http://localhost:8080</ulink>
                You should notice a <literal moreinfo="none">JavaServiceWrapper</literal>
                Agent with two MBeans, <literal moreinfo="none">WrapperManager</literal>
                and <literal moreinfo="none">WrapperManagerTesting</literal>.
                Selecting either beans will present you with a set of attributes
                and actions provided by the MBean.
            </para>
        </section>
        <section id="sun">
            <title>Sun JMX Reference Implementation</title>
            <para>
                To do.
            </para>
        </section>
    </section>
</chapter>
