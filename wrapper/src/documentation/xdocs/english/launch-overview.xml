<?xml version="1.0"?>

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "../dtd/docbook/4.1.2/docbookx.dtd">

<!-- ********************************************************************
     $Id$
     ******************************************************************** -->

<chapter id="launch-overview"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xml:base="context://xdocs/english">
 
    <title>Launch Overview</title> 

    <section>
        <title>Launching Your Application Under Wrapper</title>
        <itemizedlist>
            <listitem>
                <para>
                    <ulink url="launch-overview.html#windows">Windows NT/2000</ulink>
                </para>
            </listitem>
            <listitem>
                <para>
                    <ulink url="launch-overview.html#unix">Linux / Solaris</ulink>
                </para>
            </listitem>
        </itemizedlist>
        <section id="windows">
            <title>Windows NT/2000</title>
            <para>
                To run your application as a console app, execute the following command.
                <informalexample>
                    <screen format="linespecific">C:\MyApp\bin> Wrapper.exe -c C:\MyApp\conf\wrapper.conf</screen>
                </informalexample>
            </para>
            <para>
                To install the application as an NT service, execute.
                <informalexample>
                    <screen format="linespecific">C:\MyApp\bin> Wrapper.exe -i C:\MyApp\conf\wrapper.conf</screen>
                </informalexample>
            </para>
            <para>
                Then to start it, either reboot, go to the services control panel, or execute:
                <informalexample>
                    <screen format="linespecific">C:\MyApp\bin> net start MyApp</screen>
                </informalexample>
            </para>
            <para>
                To uninstall the application as an NT service, execute:
                <informalexample>
                    <screen format="linespecific">C:\MyApp\bin> Wrapper.exe -r C:\MyApp\conf\wrapper.conf</screen>
                </informalexample>
            </para>
            <para>
                These commands should normally be placed in batch files in the application's bin directory to make them easier to use.
            </para>
            <para>
                A typical application would have the following three batch files in the bin directory with the Wrapper.exe file.  The scripts will look for a wrapper.conf file passed in as an argument and then use a default if one is not specified.  These examples assume that the '@app.home@' token will be replaced with your application's home directory on installation.  Something like 'C:\MyApp'.  The quotes around the paths in the scripts make it possible for the path to contain spaces.
                <informalexample>
                    <simpara><emphasis>MyApp.bat</emphasis></simpara>
                    <screen format="linespecific">
<xi:include href="../../../bin/SimpleApp.bat.in" parse="text"/></screen>
                </informalexample>
                <informalexample>
                    <simpara><emphasis>InstallMyApp-NT.bat</emphasis></simpara>
                    <screen format="linespecific">
<xi:include href="../../../bin/SimpleInstallApp-NT.bat.in" parse="text"/></screen>
                </informalexample>
                <informalexample>
                    <simpara><emphasis>UninstallMyApp-NT.bat</emphasis></simpara>
                    <screen format="linespecific">
<xi:include href="../../../bin/SimpleUninstallApp-NT.bat.in" parse="text"/></screen>
                </informalexample>
            </para>
            <para>
                It is also possible to make batch scripts which use only relative paths.  This has the benefit of allowing you to unzip an application and run it in any location, but it has the drawback that the script will not work correctly on older version of windows.  Template batch files can be found in the src/bin directory, named App.bat.in, InstallApp-NT.bat.in and UninstallApp-NT.bat.in.  They should be renamed to match the name of your application.
                <informalexample>
                    <simpara><emphasis>MyApp.bat</emphasis></simpara>
                    <screen format="linespecific">
<xi:include href="../../../bin/App.bat.in" parse="text"/></screen>
                </informalexample>
            </para>
            <para>
                Starting in version 2.2.3, it is possible to specify paths in your wrapper.conf file which are relative to the Wrapper.exe file.  Older versions did not work correctly with relative paths when the application was run as an NT service.
            </para>
        </section>
        <section id="unix">
            <title>Linux / Solaris</title>
            <para>
                To run your application from the command line:
                <informalexample>
                    <screen format="linespecific">$ wrapper [your application's wrapper config file]</screen>
                </informalexample>
            </para>
            <para>
                In the src/bin subdirectory you will find some shell (bash and sh)script templates for starting and stopping wrapped applications cleanly in. These examples assume that the '@app.name@' and '@app.long.name@' tokens will be replaced with the name of your application on installation.  Good values are 'testwrapper' for '@app.name@' and 'Test Wrapper Application' for '@app.long.name@'.  These scripts also make some assumtions about your project's directory structure.  Template scripts can be found in the src/bin directory, named bash.script.in and sh.script.in respectively.
            </para>
            <para>
                You may need to tweak some of the other values (like PIDDIR in the sh script) to get them to fit your environment.
            </para>
            <para>
                These scripts are used by passing them a command.  Valid commands are <literal>start</literal>, <literal>stop</literal>, <literal>restart</literal>, and <literal>dump</literal>. <literal>start</literal> is used to launch the application and <literal>stop</literal> is used to stop it.  <literal>restart</literal> will start and then stop the application in a single command.  The <literal>dump</literal> command is used to invoke a thread dump in the JVM.  See the <ulink url="debugging.html">Debugging</ulink> section for more information on <literal>dump</literal>.
            </para>
            <para>
                <informalexample>
                    <simpara><emphasis>bash script</emphasis></simpara>
                    <screen format="linespecific">
<xi:include href="../../../bin/bash.script.in" parse="text"/></screen>
                </informalexample>
                <informalexample>
                    <simpara><emphasis>sh script</emphasis></simpara>
                    <screen format="linespecific">
<xi:include href="../../../bin/sh.script.in" parse="text"/></screen>
                </informalexample>
            </para>
        </section>
    </section>
</chapter>
