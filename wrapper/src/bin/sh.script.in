#! /bin/sh

#
# Skeleton sh script suitable for starting and stopping 
# wrapped Java apps on the Solaris platform.
#
# Make sure that PIDFILE points to the correct location,
# if you have changed the default location set in the 
# wrapper configuration file.
#

# Application
APP_HOME="@app.home@";
APP_NAME="@app.name@";
APP_LONG_NAME="@app.long.name@";

# Wrapper
WRAPPER_CMD="$APP_HOME/bin/wrapper";
WRAPPER_CONF="@app.wrapper.conf@";

# Process ID
PIDDIR="/var/run"
PIDFILE="$PIDDIR/$APP_NAME.pid"
pid=""

getpid() {
    if [ -f $PIDFILE ]
    then
	if [ -r $PIDFILE ]
	then
	    pid=`cat $PIDFILE`
	    if [ "X$pid" != "X" ]
	    then
		# Verify that a process with this pid is still running.
		pid=`/usr/bin/ps -p $pid | grep $pid | grep -v grep | awk '{print $1}' | tail -1`
		if [ "X$pid" = "X" ]
		then
		    # This is a stale pid file.
		    rm -f $PIDFILE
		    echo "Removed stale pid file: $PIDFILE"
		fi
	    fi
	else
	    echo "Cannot read $PIDFILE."
	    rm -f $PIDFILE
	    exit 1
	fi
    fi
}
 
start() {
    echo "Starting $APP_LONG_NAME..."
    getpid
    if [ "X$pid" = "X" ]
    then
        exec $WRAPPER_CMD $WRAPPER_CONF &
    else
        echo "$APP_LONG_NAME is already running."
        exit 1
    fi
}
 
stop() {
    echo "Stopping $APP_LONG_NAME..."
    getpid
    if [ "X$pid" = "X" ]
    then
        echo "$APP_LONG_NAME was not running."

    else
        kill $pid
        sleep 6

        pid=`/usr/bin/ps -p $pid | grep $pid | grep -v grep | awk '{print $1}' | tail -1`

        if [ "X$pid" != "X" ]
        then
	    # SIGTERM didn't work, send SIGKILL.
            kill -9 $pid
	    rm -f $PIDFILE

            pid=`/usr/bin/ps -p $pid | grep $pid | grep -v grep | awk '{print $1}' | tail -1`
        fi

        if [ "X$pid" != "X" ]
        then
            echo "Failed to stop $APP_LONG_NAME."
            exit 1
        else
            echo "Stopped $APP_LONG_NAME."
        fi
    fi
}

case "$1" in

    'start')
        start
        ;;

    'stop')
        stop
        ;;

    'restart')
        stop
        start
    ;;

    *)
        echo "Usage: $0 { start | stop | restart }"
        exit 1
        ;;
esac

exit 0
