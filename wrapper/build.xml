<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- Wrapper build file                                                     -->
<!-- ======================================================================= -->

<project name="wrapper" default="main" basedir=".">
    
    <!-- Local build properties -->
    <property file="${user.home}/.ant.local.properties" />
    
    <!-- platform -->
    <property name="is.${os.name}" value="true"/>
    
    <property name="Name" value="Wrapper"/>
    <property name="name" value="wrapper"/>
    
    <!-- product version -->
    <property name="major.version"  value="2" />
    <property name="version"        value="${major.version}.2.2" />
    
    <property name="bin.dir" value="bin"/>
    <property name="src.dir" value="src"/>
    <property name="lib.dir" value="lib"/>
    <property name="doc.dir" value="doc"/>
    <property name="jdoc.dir" value="jdoc"/>
    <property name="context.dir" value="${src.dir}/documentation"/>
    
    <property name="build.dir" value="build"/>
    <property name="build.classes" value="build/classes"/>
    
    <property name="classpath" value=""/>
    
    <path id="tools.class.path">
        <pathelement location="${java.home}/../lib/tools.jar"/>
        <fileset dir="${tools.dir}/lib">
            <include name="*.jar" />
        </fileset>
    </path>
    
    <!-- =================================================================== -->
    <!-- Help on usage                                                       -->
    <!-- =================================================================== -->
    <target name="usage">
        <echo message="Use the -projecthelp option instead"/>
    </target>
    <target name="help" depends="usage"/>
    
    <!-- =================================================================== -->
    <!-- Initialize Windows NT build properties.                             -->
    <!-- =================================================================== -->
    <target name="init-windows-nt" if="is.Windows NT" >
        <property name="platform"        value="windows"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Initialize Windows 2000 build properties.                           -->
    <!-- =================================================================== -->
    <target name="init-windows-2000" if="is.Windows 2000" >
        <property name="platform"        value="windows"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Initialize Linux build properties.                                  -->
    <!-- =================================================================== -->
    <target name="init-linux" if="is.Linux" >
        <property name="platform"        value="linux"/>
    </target>

    <!-- =================================================================== -->
    <!-- Initialize Solaris build properties.                                -->
    <!-- =================================================================== -->
    <target name="init-solaris" if="is.SunOS" >
        <property name="platform"        value="solaris"/>
    </target>

    <!-- =================================================================== -->
    <!-- Initialize build.                                                   -->
    <!-- =================================================================== -->
    <target name="init" depends="init-windows-nt, init-windows-2000, init-linux, init-solaris">
        <filter token="java.home"         value="${java.home}" />
        <filter token="wrapper.home"      value="${basedir}" />
        <filter token="java.library.path" value="${basedir}/lib/${platform}" />
        <filter token="platform"          value="${platform}" />
        
        <tstamp/>
        <filter token="version"           value="${version}"       />
        <filter token="build.date"        value="${DSTAMP}"        />
        <filter token="build.time"        value="${TSTAMP}"        />
        
        <copy file="test/test.conf.in"    tofile="test/test.conf" filtering="on"/>
        <copy file="test/testapp.conf.in" tofile="test/testapp.conf" filtering="on"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Converts natively encoded src files to ascii                        -->
    <!-- =================================================================== -->
    <target name="convert" depends="init">
        <native2ascii src="${src.dir}/java"
                      dest="${src.dir}/java"
                      encoding="JISAutoDetect"
                      ext="native"
                      includes="**/*.native" />
    </target>
    
    <!-- =================================================================== -->
    <!-- Updates version info and build time in source code                  -->
    <!-- =================================================================== -->
    <target name="update-info" depends="init">
        
        <!-- nuke server info source file to make sure it gets rewritten every build -->
        <delete file="${src.dir}/java/com/silveregg/wrapper/WrapperInfo.java" />
        
        <!-- copy server info source, using filtering to update version and build time -->
        <copy file="${src.dir}/java/com/silveregg/wrapper/WrapperInfo.java.in"
              tofile="${src.dir}/java/com/silveregg/wrapper/WrapperInfo.java" 
              filtering="on"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Compiles the source code                                            -->
    <!-- =================================================================== -->
    <target name="compile" depends="convert,update-info">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${lib.dir}"/>
        <mkdir dir="${lib.dir}/linux"/>
        <mkdir dir="${lib.dir}/solaris"/>
        <mkdir dir="${lib.dir}/windows"/>
        <mkdir dir="${bin.dir}"/>        
        <mkdir dir="${bin.dir}/linux"/>
        <mkdir dir="${bin.dir}/solaris"/>
        <mkdir dir="${bin.dir}/windows"/>
        
        <!-- compile everything under com -->
        <javac srcdir="${src.dir}/java" destdir="${build.classes}"
               deprecation="on"
               debug="on"
               optimize="on">
            <include name="com/**" />
            <classpath id="compile.classpath"> 
            </classpath>
        </javac>

        <!-- copy resource files to build directory -->
        <copy todir="${build.classes}" > 
            <fileset dir="${src.dir}/java" > 
                <include name="com/**/*.properties" /> 
                <include name="com/**/*.jpg" />
            </fileset> 
        </copy>

        <!-- copy Manifests to build directory -->
        <copy todir="${build.classes}" > 
            <fileset dir="${src.dir}/java" > 
                <include name="**/Manifest"/>
            </fileset> 
        </copy>
        
        <!-- run Nmake on Windows to build native code -->
        
        <!-- run make on Linux to build library -->
        <exec executable="make" 
              dir="${src.dir}/c" 
              os="Linux">
            <arg line="-f Makefile.linux" />
        </exec>
        <exec executable="ln" dir="${bin.dir}" os="Linux" output="/dev/null">
            <arg line="-s linux/wrapper wrapper" />
        </exec>
        
        <!-- run make on Solaris to build library -->
        <exec executable="gmake" 
              dir="${src.dir}/c" 
              os="SunOS">
            <arg line="-f Makefile.solaris" />
        </exec>
        <exec executable="ln" dir="${bin.dir}" os="SunOS" output="/dev/null">
            <arg line="-s solaris/wrapper wrapper" />
        </exec>
        
    </target>
    
    <!-- =================================================================== -->
    <!-- Creates the jar archive                                             -->
    <!-- =================================================================== -->
    <target name="jar" depends="compile">
        <jar jarfile="${lib.dir}/wrapper.jar"
             basedir="${build.classes}"
             includes="com/silveregg/wrapper/*.class,com/silveregg/wrapper/resources/*.class,**/*.properties"
             />
        <jar jarfile="${lib.dir}/wrappertest.jar"
             basedir="${build.classes}"
             includes="com/silveregg/wrapper/*.class,com/silveregg/wrapper/resources/*.class,com/silveregg/wrapper/test/*.class,**/*.properties"
             />
    </target>
    
    <!-- =================================================================== -->
    <!-- Creates the javadocs archive                                        -->
    <!-- =================================================================== -->
    <target name="jdoc" description="generates the Wrapper javadocs">
        <mkdir dir="${jdoc.dir}"/>
        
        <!-- Locale must be before any doclet parameters -->
        <javadoc packagenames="com.silveregg.wrapper"
            Locale="en_US"
            sourcepath="${src.dir}/java"
            destdir="${jdoc.dir}"
            author="true"
            version="true"
            private="false"
            use="true"
            windowtitle="SilverEgg Wrapper API"
            doctitle="SilverEgg Wrapper"
            bottom="Copyright 2000, 2001 SilverEgg Technology Corp. All Rights Reserved."
        />
    </target>

    <!-- =================================================================== -->
    <!-- Main target                                                         -->
    <!-- =================================================================== -->
    <target name="main" depends="jar" description="default development build task">
    </target>
    
    <!-- =================================================================== -->
    <!-- Documentation target                                                -->
    <!-- =================================================================== -->
    <target name="doc" description="generates the Wrapper documentation">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.dir}/work"/>
        <mkdir dir="${doc.dir}"/>
        
        <java classname="org.apache.cocoon.Main" fork="true">
            <jvmarg value="-Xmx256M"/>
            <arg value="-c${context.dir}/"/>
            <arg value="-d${doc.dir}"/>
            <arg value="-w${build.dir}/work"/>
            <arg value="-uINFO"/>
            <arg value="-f${context.dir}/english.uris"/>
            <classpath>
                <path refid="tools.class.path"/>
            </classpath>
        </java>

        <copy tofile="${doc.dir}/english/index.html" 
              file="${doc.dir}/english/introduction.html"/>
    </target>
    
    <!-- =================================================================== -->
    <!-- Release targets                                                     -->
    <!-- =================================================================== -->
    <target name="release-common" depends="main, jdoc, doc" description="common release build">
        <property name="releasesrcfile" value="wrapper_${version}_src"/>
        <property name="releasesrcdir" value="${basedir}/${releasesrcfile}"/>
        <delete dir="${releasesrcdir}"/>
        <mkdir dir="${releasesrcdir}"/>
        <copy todir="${releasesrcdir}" >
            <fileset dir="${basedir}" >
                <include name="build.*" />
                <include name="doc/**" />
                <include name="src/bin/**" />
                <include name="src/java/**" />
                <include name="src/c/*.c" />
                <include name="src/c/*.h" />
                <include name="src/c/Makefile.*" />
                <include name="src/c/*.dsp" />
                <include name="src/c/*.dsw" />
                <include name="src/c/*.plg" />
                <include name="src/documentation/**" />
                <include name="test/*" />
                <exclude name="test/*.log" />
                <exclude name="test/*.conf" />
                <include name="tools/**" />
                <exclude name="**/CVS/*" />
            </fileset>
        </copy>
        
        <!-- Source archives with documentation source -->
        <zip zipfile="${releasesrcdir}_with_doc_src.zip"
            basedir="${basedir}"
            compress="true">
            <include name="${releasesrcfile}/**/*" />
        </zip>
        <tar tarfile="${releasesrcdir}_with_doc_src.tar"
             basedir="${basedir}">
            <include name="${releasesrcfile}/**/*" />
        </tar>
        <gzip zipfile="${releasesrcdir}_with_doc_src.tar.gz" src="${releasesrcdir}_with_doc_src.tar" />
        
        <!-- Source archives without documentation source -->
        <zip zipfile="${releasesrcdir}.zip"
            basedir="${basedir}"
            compress="true">
            <include name="${releasesrcfile}/**/*" />
            <exclude name="${releasesrcfile}/src/documentation/**/*" />
            <exclude name="${releasesrcfile}/tools/lib/avalon-excalibur.jar" />
            <exclude name="${releasesrcfile}/tools/lib/avalon-framework.jar" />
            <exclude name="${releasesrcfile}/tools/lib/batik-libs.jar" />
            <exclude name="${releasesrcfile}/tools/lib/cocoon.jar" />
            <exclude name="${releasesrcfile}/tools/lib/fop-0_20_1-dev.jar" />
            <exclude name="${releasesrcfile}/tools/lib/logkit.jar" />
            <exclude name="${releasesrcfile}/tools/lib/NetComponents.jar" />
            <exclude name="${releasesrcfile}/tools/lib/resolver.jar" />
            <exclude name="${releasesrcfile}/tools/lib/xalan-2.2.0-D8.jar" />
        </zip>
        <tar tarfile="${releasesrcdir}.tar"
             basedir="${basedir}">
            <include name="${releasesrcfile}/**/*" />
            <exclude name="${releasesrcfile}/src/documentation/**/*" />
            <exclude name="${releasesrcfile}/tools/lib/avalon-excalibur.jar" />
            <exclude name="${releasesrcfile}/tools/lib/avalon-framework.jar" />
            <exclude name="${releasesrcfile}/tools/lib/batik-libs.jar" />
            <exclude name="${releasesrcfile}/tools/lib/cocoon.jar" />
            <exclude name="${releasesrcfile}/tools/lib/fop-0_20_1-dev.jar" />
            <exclude name="${releasesrcfile}/tools/lib/logkit.jar" />
            <exclude name="${releasesrcfile}/tools/lib/NetComponents.jar" />
            <exclude name="${releasesrcfile}/tools/lib/resolver.jar" />
            <exclude name="${releasesrcfile}/tools/lib/xalan-2.2.0-D8.jar" />
        </tar>
        <gzip zipfile="${releasesrcdir}.tar.gz" src="${releasesrcdir}.tar" />
    </target>
    
    <target name="release-win" depends="release-common" description="Win32 release build">
        <property name="releasefile" value="wrapper_win32_${version}"/>
        <property name="releasedir" value="${basedir}/${releasefile}"/>
        <delete dir="${releasedir}"/>
        <mkdir dir="${releasedir}"/>
        <copy todir="${releasedir}" >
            <fileset dir="${basedir}" >
                <include name="bin/windows/Wrapper.exe" />
                <include name="lib/wrapper.jar" />
                <include name="lib/windows/Wrapper.dll" />
                <include name="jdoc/**" />
                <include name="doc/**" />
                <exclude name="**/CVS/*" />
            </fileset>
        </copy>
        <zip zipfile="${releasedir}.zip"
            basedir="${basedir}"
            compress="true">
            <include name="${releasefile}/**/*" />
        </zip>
    </target>
    
    <target name="release-linux" depends="release-common" description="Linux release build">
        <property name="releasefile" value="wrapper_linux_${version}"/>
        <property name="releasedir" value="${basedir}/${releasefile}"/>
        <delete dir="${releasedir}"/>
        <mkdir dir="${releasedir}"/>
        <copy todir="${releasedir}" >
            <fileset dir="${basedir}" >
                <include name="bin/linux/wrapper" />
                <include name="lib/wrapper.jar" />
                <include name="lib/linux/libwrapper.so" />
                <include name="jdoc/**" />
                <include name="doc/**" />
                <include name="src/bin/*.script.in" />
                <exclude name="**/CVS/*" />
            </fileset>
        </copy>
        <tar tarfile="${releasedir}.tar"
             basedir="${basedir}">
            <include name="${releasefile}/**/*" />
        </tar>
        <gzip zipfile="${releasedir}.tar.gz" src="${releasedir}.tar" />
    </target>
    
    <target name="release-solaris" depends="release-common" description="Solaris release build">
        <property name="releasefile" value="wrapper_solaris_${version}"/>
        <property name="releasedir" value="${basedir}/${releasefile}"/>
        <delete dir="${releasedir}"/>
        <mkdir dir="${releasedir}"/>
        <copy todir="${releasedir}" >
            <fileset dir="${basedir}" >
                <include name="bin/solaris/wrapper" />
                <include name="lib/wrapper.jar" />
                <include name="lib/solaris/libwrapper.so" />
                <include name="jdoc/**" />
                <include name="doc/**" />
                <include name="src/bin/*.script.in" />
                <exclude name="**/CVS/*" />
            </fileset>
        </copy>
        <tar tarfile="${releasedir}.tar"
             basedir="${basedir}">
            <include name="${releasefile}/**/*" />
        </tar>
        <gzip zipfile="${releasedir}.tar.gz" src="${releasedir}.tar" />
    </target>
    
    <!-- =================================================================== -->
    <!-- Run test.                                                           -->
    <!-- =================================================================== -->
    <target name="test" depends="main" description="Launch the test application">
        <exec executable="${bin.dir}/windows/Wrapper.exe" dir="${basedir}/test" os="Windows NT">
            <arg value="-c"/>
            <arg value="${basedir}/test/test.conf"/>
        </exec>
    
        <exec executable="sh" dir="test" os="Linux">
            <arg value="TestWrapper"/>
        </exec>
    </target>

    <!-- =================================================================== -->
    <!-- Cleans up generated stuff                                           -->
    <!-- =================================================================== -->
    <target name="clean" description="Clean up any files from the build">
        <delete dir="${build.dir}"/>
        <delete dir="${jdoc.dir}"/>
        <exec executable="make"
              dir="${src.dir}/c"
              os="Linux">
            <arg line="-f Makefile.linux" />
            <arg value="clean"/>
        </exec>
        <exec executable="make" 
              dir="${src.dir}/c" 
              os="SunOS">
            <arg line="-f Makefile.solaris" />
            <arg value="clean"/>
        </exec>
    </target>
    
    <!-- =================================================================== -->
    <!-- Total cleanup                                                       -->
    <!-- =================================================================== -->
    <target name="total-clean" depends="clean" description="Clean up all build and target files">
        <delete file="test/test.conf" />
        <delete file="${lib.dir}/wrapper.jar"/>
        <delete file="${lib.dir}/wrappertest.jar"/>
        <exec executable="make" 
              dir="${src.dir}/c" 
              os="Linux">
            <arg line="-f Makefile.linux" />
            <arg value="cleanall"/>
        </exec>
        <exec executable="make"
              dir="${src.dir}/c"
              os="SunOS">
            <arg line="-f Makefile.solaris" />
            <arg value="cleanall"/>
        </exec>
        <delete dir="${lib.dir}/linux"/>
        <delete dir="${lib.dir}/solaris"/>
        <delete dir="${bin.dir}/linux"/>
        <delete dir="${bin.dir}/solaris"/>
    </target>
</project>

